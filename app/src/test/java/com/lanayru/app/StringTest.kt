package com.lanayru.app

import com.lanayru.emoji.EmojiManager
import com.lanayru.util.Logs
import org.junit.Test

class StringTest {

    @Test
    fun indexof() {
        val s = "/index"
        val s1 = "/index/1"
        println(
                s.indexOf("/", 1)
        )
        println(
                s1.indexOf("/", 1)
        )

        println(s.substring(1, s.indexOf("/", 1)))
        println(s1.substring(1, s.indexOf("/", 1)))
    }

    @Test
    fun testSplit() {
        val s = "a,b,c,,"
        val array = s.split(",")
        println("array: $array length ${array.size}")
    }

    @Test
    fun testFormat() {
        println(String.format("%.2f M", 0.2345f))
    }

    @Test
    fun getFileName() {
        val s = "http://www.ss.com/index/panda.dex"
        val name = s.substring(s.lastIndexOf('/') + 1)
        println(name)
    }

    @Test
    fun emojiLength() {
        val s = "üòÄüòú"
        println(s.length)
        println(s.toCharArray())
    }

    @Test
    fun emojislpit() {
        val ss = "\uD83D\uDE00\uD83D\uDE03\uD83D\uDE04\uD83D\uDE01\uD83D\uDE06\uD83D\uDE05\uD83D\uDE02\uD83E\uDD23‚ò∫Ô∏è\uD83D\uDE0A\uD83D\uDE07\uD83D\uDE42\uD83D\uDE43\uD83D\uDE09\uD83D\uDE0C\uD83D\uDE0D\uD83D\uDE18\uD83D\uDE17\uD83D\uDE19\uD83D\uDE1A\uD83D\uDE0B\uD83D\uDE1B\uD83D\uDE1D\uD83D\uDE1C\uD83E\uDD2A\uD83E\uDD28\uD83E\uDDD0\uD83E\uDD13\uD83D\uDE0E\uD83E\uDD29\uD83D\uDE0F\uD83D\uDE12\uD83D\uDE1E\uD83D\uDE14\uD83D\uDE1F\uD83D\uDE15\uD83D\uDE41‚òπÔ∏è\uD83D\uDE23\uD83D\uDE16\uD83D\uDE2B\uD83D\uDE29\uD83D\uDE22\uD83D\uDE2D\uD83D\uDE24\uD83D\uDE20\uD83D\uDE21\uD83E\uDD2C\uD83E\uDD2F\uD83D\uDE33\uD83D\uDE31\uD83D\uDE28\uD83D\uDE30\uD83D\uDE25\uD83D\uDE13\uD83E\uDD17\uD83E\uDD14\uD83E\uDD2D\uD83E\uDD2B\uD83E\uDD25\uD83D\uDE36\uD83D\uDE10\uD83D\uDE11\uD83D\uDE2C\uD83D\uDE44\uD83D\uDE2F\uD83D\uDE26\uD83D\uDE27\uD83D\uDE2E\uD83D\uDE32\uD83D\uDE34\uD83E\uDD24\uD83D\uDE2A\uD83D\uDE35\uD83E\uDD10\uD83E\uDD22\uD83E\uDD2E\uD83E\uDD27\uD83D\uDE37\uD83E\uDD12\uD83E\uDD15\uD83E\uDD11\uD83E\uDD20\uD83D\uDE08\uD83D\uDC7F\uD83D\uDC79\uD83D\uDC7A\uD83E\uDD21\uD83D\uDCA9\uD83D\uDC7B\uD83D\uDC80‚ò†Ô∏è\uD83D\uDC7D\uD83D\uDC7E\uD83E\uDD16\uD83C\uDF83\uD83D\uDE3A\uD83D\uDE38\uD83D\uDE39\uD83D\uDE3B\uD83D\uDE3C\uD83D\uDE3D\uD83D\uDE40\uD83D\uDE3F\uD83D\uDE3E\uD83E\uDD32\uD83D\uDE4C\uD83D\uDC4F\uD83E\uDD1D\uD83D\uDC4D\uD83D\uDC4E\uD83D\uDC4A‚úä\uD83E\uDD1B\uD83E\uDD1C\uD83E\uDD1F\uD83D\uDC4C\uD83D\uDC48\uD83D\uDC49\uD83D\uDC46\uD83D\uDC47‚úã\uD83D\uDC4B\uD83E\uDD19\uD83D\uDCAA\uD83D\uDE4F\uD83D\uDC84\uD83D\uDC8B\uD83D\uDC44\uD83D\uDC45\uD83D\uDC42\uD83D\uDC43\uD83D\uDC63\uD83D\uDC40\uD83E\uDDE0\uD83D\uDC76\uD83D\uDC67\uD83D\uDC66\uD83D\uDC69\uD83D\uDC68\uD83D\uDC75\uD83E\uDDD3\uD83D\uDC72\uD83D\uDC73\uD83E\uDDD5\uD83D\uDC6EÔ∏èÔ∏è\uD83D\uDC77Ô∏èÔ∏è\uD83D\uDC82Ô∏èÔ∏è\uD83D\uDD75Ô∏èÔ∏èÔ∏èÔ∏è\uD83C\uDF3E\uD83C\uDF73\uD83C\uDF93\uD83C\uDFEB\uD83D\uDCBB\uD83D\uDCBC\uD83D\uDD2C\uD83C\uDFA8\uD83D\uDC78\uD83E\uDD34\uD83D\uDC70\uD83E\uDD35\uD83E\uDD36\uD83C\uDF85\uD83D\uDC7C\uD83E\uDD30\uD83E\uDD31Ô∏è\uD83D\uDE47Ô∏èÔ∏è\uD83D\uDC81Ô∏è\uD83D\uDC87\uD83D\uDC86\uD83D\uDC6FÔ∏è\uD83D\uDEB6Ô∏è\uD83C\uDFC3Ô∏è\uD83D\uDC91\uD83D\uDC6A\uD83D\uDC83\uD83D\uDD7A\uD83D\uDC85\uD83E\uDD33\uD83E\uDDE5\uD83D\uDC5A\uD83D\uDC55\uD83D\uDC56\uD83D\uDC54\uD83D\uDC57\uD83D\uDC59\uD83D\uDC58\uD83D\uDC60\uD83D\uDC61\uD83D\uDC62\uD83D\uDC5E\uD83D\uDC5F\uD83E\uDDE6\uD83E\uDDE4\uD83E\uDDE3\uD83C\uDFA9\uD83E\uDDE2\uD83D\uDC52\uD83C\uDF93‚õë\uD83D\uDC51\uD83D\uDC8D\uD83D\uDC5D\uD83D\uDC5B\uD83D\uDC5C\uD83D\uDCBC\uD83C\uDF92\uD83D\uDC53\uD83D\uDD76\uD83C\uDF02"
        var i = 0
        while (i < ss.length) {
            println(ss.subSequence(i, i + 2))
            i += 2

        }
    }

    @Test
    fun emojislpit1() {
        val ss = "\uD83D\uDE00,\uD83D\uDE03,\uD83D\uDE04,\uD83D\uDE01,\uD83D\uDE06,\uD83D\uDE05,\uD83D\uDE02,‚ò∫Ô∏è," +
                "\uD83D\uDE0A,\uD83D\uDE07,\uD83D\uDE09,\uD83D\uDE0C,\uD83D\uDE0D,\uD83D\uDE18,\uD83D\uDE17,\uD83D\uDE19," +
                "\uD83D\uDE1A,\uD83D\uDE0B,\uD83D\uDE1B,\uD83D\uDE1D,\uD83D\uDE1C,\uD83D\uDE0E,\uD83D\uDE0F,\uD83D\uDE12," +
                "\uD83D\uDE1E,\uD83D\uDE14,\uD83D\uDE1F,\uD83D\uDE15,\uD83D\uDE23,\uD83D\uDE16,\uD83D\uDE2B,\uD83D\uDE29," +
                "\uD83D\uDE22,\uD83D\uDE2D,\uD83D\uDE24,\uD83D\uDE20,\uD83D\uDE21,\uD83D\uDE33,\uD83D\uDE31,\uD83D\uDE28," +
                "\uD83D\uDE30,\uD83D\uDE25,\uD83D\uDE13,\uD83D\uDE36,\uD83D\uDE10,\uD83D\uDE11,\uD83D\uDE2C,\uD83D\uDE2F," +
                "\uD83D\uDE26,\uD83D\uDE27,\uD83D\uDE2E,\uD83D\uDE32,\uD83D\uDE34,\uD83D\uDE2A,\uD83D\uDE35,\uD83D\uDE37," +
                "\uD83D\uDE08,\uD83D\uDC7F,\uD83D\uDC79,\uD83D\uDC7A,\uD83D\uDCA9,\uD83D\uDC7B,\uD83D\uDC80,\uD83D\uDC7D," +
                "\uD83C\uDF83,\uD83D\uDE4C,\uD83D\uDC4F,\uD83D\uDC4D,\uD83D\uDC4E,\uD83D\uDC4A,‚úä,\uD83D\uDC4C," +
                "\uD83D\uDC48,\uD83D\uDC49,\uD83D\uDC46,\uD83D\uDC47,‚úã,\uD83D\uDC4B,\uD83D\uDCAA,\uD83D\uDE4F," +
                "\uD83D\uDC84,\uD83D\uDC8B,\uD83D\uDC44,\uD83D\uDC45,\uD83D\uDC42,\uD83D\uDC43,\uD83D\uDC63,\uD83D\uDC40," +
                "\uD83D\uDC76,\uD83D\uDC67,\uD83D\uDC66,\uD83D\uDC69,\uD83D\uDC68,\uD83D\uDC75,\uD83D\uDC72,\uD83D\uDC73," +
                "\uD83D\uDC6E,Ô∏èÔ∏è\uD83D\uDC77Ô∏èÔ∏è,\uD83D\uDC82Ô∏è,\uD83D\uDC78,\uD83D\uDC70,\uD83C\uDF85,\uD83D\uDC7C,\uD83D\uDE47," +
                "Ô∏èÔ∏è\uD83D\uDC81Ô∏è,\uD83D\uDC87,\uD83D\uDC86,\uD83D\uDC6F,\uD83D\uDEB6,Ô∏è\uD83C\uDFC3Ô∏è,\uD83D\uDC91,\uD83D\uDC6A," +
                "\uD83D\uDC83,\uD83D\uDC85,\uD83D\uDC5A,\uD83D\uDC55,\uD83D\uDC56,\uD83D\uDC54,\uD83D\uDC57,\uD83D\uDC59," +
                "\uD83D\uDC58,\uD83D\uDC60,\uD83D\uDC61,\uD83D\uDC62,\uD83D\uDC5E,\uD83D\uDC5F,\uD83C\uDFA9,\uD83D\uDC52," +
                "\uD83C\uDF93,\uD83D\uDC51,\uD83D\uDC8D,\uD83D\uDC5D,\uD83D\uDC5B,\uD83D\uDC5C,\uD83D\uDCBC,\uD83C\uDF92," +
                "\uD83D\uDC53,\uD83C\uDF02"
        val array = ss.split(",")

        for (a in array) {
//            println("{\"name\":\"\",\"desc\":\"$a\"}")
            println("{\"desc\":\"$a\"},")
        }
    }

    @Test
    fun testCharacter() {
       println( String(intArrayOf(0x1F399, 0xFE0F), 0, 2))
       println( String(intArrayOf(0x1F399), 0, 1))
       println( String(intArrayOf(0xFE0F), 0, 1))

        var s = "\uD83C\uDF99\uD83E\uDD70,\uD83E\uDD74,\uD83E\uDD73,ÂìàÈªë‚úä\uD83D\uDE00,\uD83D\uDE03,\uD83D\uDE04,\uD83D\uDE01,\uD83D\uDE06,\uD83D\uDE05,\uD83D\uDE02"

        s = s.replace(",", "")

        var i = 0
        val end = s.length
        while (i < end) {
            val codePoint = Character.codePointAt(s, i)
            var charCount = Character.charCount(codePoint)
            println("${String(intArrayOf(codePoint), 0, 1)} ${String(Character.toChars(codePoint))} codePoint ${Integer.toHexString(codePoint)} count $charCount")
            i += charCount
        }
    }

    @Test
    fun testMatchSpeed() {
        val ss = "\uD83D\uDE00,\uD83D\uDE03,\uD83D\uDE04,\uD83D\uDE01,\uD83D\uDE06,\uD83D\uDE05,\uD83D\uDE02,‚ò∫Ô∏è," +
                "\uD83D\uDE0A,\uD83D\uDE07,\uD83D\uDE09,\uD83D\uDE0C,\uD83D\uDE0D,\uD83D\uDE18,\uD83D\uDE17,\uD83D\uDE19," +
                "\uD83D\uDE1A,\uD83D\uDE0B,\uD83D\uDE1B,\uD83D\uDE1D,\uD83D\uDE1C,\uD83D\uDE0E,\uD83D\uDE0F,\uD83D\uDE12," +
                "\uD83D\uDE1E,\uD83D\uDE14,\uD83D\uDE1F,\uD83D\uDE15,\uD83D\uDE23,\uD83D\uDE16,\uD83D\uDE2B,\uD83D\uDE29," +
                "\uD83D\uDE22,\uD83D\uDE2D,\uD83D\uDE24,\uD83D\uDE20,\uD83D\uDE21,\uD83D\uDE33,\uD83D\uDE31,\uD83D\uDE28," +
                "\uD83D\uDE30,\uD83D\uDE25,\uD83D\uDE13,\uD83D\uDE36,\uD83D\uDE10,\uD83D\uDE11,\uD83D\uDE2C,\uD83D\uDE2F," +
                "\uD83D\uDE26,\uD83D\uDE27,\uD83D\uDE2E,\uD83D\uDE32,\uD83D\uDE34,\uD83D\uDE2A,\uD83D\uDE35,\uD83D\uDE37," +
                "\uD83D\uDE08,\uD83D\uDC7F,\uD83D\uDC79,\uD83D\uDC7A,\uD83D\uDCA9,\uD83D\uDC7B,\uD83D\uDC80,\uD83D\uDC7D," +
                "\uD83C\uDF83,\uD83D\uDE4C,\uD83D\uDC4F,\uD83D\uDC4D,\uD83D\uDC4E,\uD83D\uDC4A,‚úä,\uD83D\uDC4C," +
                "\uD83D\uDC48,\uD83D\uDC49,\uD83D\uDC46,\uD83D\uDC47,‚úã,\uD83D\uDC4B,\uD83D\uDCAA,\uD83D\uDE4F," +
                "\uD83D\uDC84,\uD83D\uDC8B,\uD83D\uDC44,\uD83D\uDC45,\uD83D\uDC42,\uD83D\uDC43,\uD83D\uDC63,\uD83D\uDC40," +
                "\uD83D\uDC76,\uD83D\uDC67,\uD83D\uDC66,\uD83D\uDC69,\uD83D\uDC68,\uD83D\uDC75,\uD83D\uDC72,\uD83D\uDC73," +
                "\uD83D\uDC6E,Ô∏èÔ∏è\uD83D\uDC77Ô∏èÔ∏è,\uD83D\uDC82Ô∏è,\uD83D\uDC78,\uD83D\uDC70,\uD83C\uDF85,\uD83D\uDC7C,\uD83D\uDE47," +
                "Ô∏èÔ∏è\uD83D\uDC81Ô∏è,\uD83D\uDC87,\uD83D\uDC86,\uD83D\uDC6F,\uD83D\uDEB6,Ô∏è\uD83C\uDFC3Ô∏è,\uD83D\uDC91,\uD83D\uDC6A," +
                "\uD83D\uDC83,\uD83D\uDC85,\uD83D\uDC5A,\uD83D\uDC55,\uD83D\uDC56,\uD83D\uDC54,\uD83D\uDC57,\uD83D\uDC59," +
                "\uD83D\uDC58,\uD83D\uDC60,\uD83D\uDC61,\uD83D\uDC62,\uD83D\uDC5E,\uD83D\uDC5F,\uD83C\uDFA9,\uD83D\uDC52," +
                "\uD83C\uDF93,\uD83D\uDC51,\uD83D\uDC8D,\uD83D\uDC5D,\uD83D\uDC5B,\uD83D\uDC5C,\uD83D\uDCBC,\uD83C\uDF92," +
                "\uD83D\uDC53,\uD83C\uDF02"

        var sb = StringBuilder()
        for (i in 0 until 2) {
            sb.append(ss)
        }

        val sss = sb.toString()

        EmojiManager.install()

        Logs.duration {
            EmojiManager.findEmojisCodePoint(sss)
        }

        Logs.duration {
            EmojiManager.findEmojisPattern(sss)
        }

    }

}